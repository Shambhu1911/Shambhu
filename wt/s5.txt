s5
Q1
<?php
$sal=$_POST['sal'];
$da=$_POST['da'];
$hra=$_POST['hra'];
$total=$sal+$da+$hra;
  if (isset($_COOKIE['no'])){
    $eno=$_COOKIE['no'];
  }
  if (isset($_COOKIE['name'])){
    $ename=$_COOKIE['name'];
  }
  if (isset($_COOKIE['address'])){
    $eadd=$_COOKIE['address'];
  }
?>


<html>
    <head>
        <title> third page</title>
    </head>
    <body>
    <?php
         echo"<br>Employee No : ".$eno."<br><br>";
        echo"Employee Name : ".$ename."<br>";
        echo"Employee Address : ".$eadd."<br>";
        echo"Employee Salary : ".$sal."<br>";
        echo"Employee DA : ".$da."<br>";
        echo"Employee HRA : ".$hra."<br>";
        echo"Employee's Total salary  : ".$total."<br><br>";
        ?>        
    </body>
</html>


<?xml version="1.0" encoding="UTF-8" ?>
<?xml-stylesheet type="text/css" href="S05.css"?>
<S05>
<A>
<iname>Mobile</iname>
<price>21500</price>
<quantity>1</quantity>
</A>
<A>
<iname>Air Buds</iname>
<price>1500</price>
<quantity>2</quantity>
</A>
<A>
<iname>Air Buds</iname>
<price>1500</price>
<quantity>2</quantity>
</A>
<A>
<iname>Air Buds</iname>
<price>1500</price>
<quantity>2</quantity>
</A>
</S05>

Q2
import pandas as pd
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

iris = load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)
df['target'] 
print("Statistical details of Iris-setosa:")
print(df[df['target'] == 0].describe())

print("Statistical details of Iris-versicolor:")
print(df[df['target'] == 1].describe())

print("Statistical details of Iris-virginica:")
print(df[df['target'] == 2].describe())

X = df.iloc[:, :-1]
y = df['target']  # Changed to 'target'
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

logreg = LogisticRegression(max_iter=1000)
logreg.fit(X_train, y_train)

y_pred = logreg.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print("Accuracy of the logistic regression model:", accuracy)