S9
Q1
<html>
<body>
    <form onsubmit="return validateForm()">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username"><br><br>
        
        <label for="password">Password:</label>
        <input type="password" id="password" name="password"><br><br>
        
        <input type="submit" value="Submit">
    </form>
</body>
<script>
    function validateForm() {
    var username = document.getElementById("username").value;
    var password = document.getElementById("password").value;

    if (username.trim() === "") {
        alert("Username cannot be empty.");
        return false;
    }

    if (password.trim() === "") {
        alert("Password cannot be empty.");
        return false;
    }

    if (username.length < 4 || username.length > 20) {
        alert("Username must be between 4 and 20 characters.");
        return false;
    }

    if (password.length < 6 || password.length > 20) {
        alert("Password must be between 6 and 20 characters.");
        return false;
    }

    return true;
}

</script>
</html>


Q2
from mlxtend.preprocessing import TransactionEncoder
from mlxtend.frequent_patterns import apriori,association_rules
import pandas as pd 

transaction=[['Apple','Mango'],['Orange','Apple','Pineapple','Guava'],['Apple','Guava','Banana','Pineapple'],['Orange','Mango','Apple','Banana'],['Guava','Mango','Orange','Banana']]
te = TransactionEncoder()

te_array = te.fit(transaction).transform(transaction)
df = pd.DataFrame(te_array,columns=te.columns_)
print(df)

freq_items = apriori(df,min_support=0.005,use_colnames=True)
print(freq_items)

rules = association_rules(freq_items,metric ='support',min_threshold=0.05)

rules = rules.sort_values(['support','confidence'],ascending=[False,False])

print(rules)